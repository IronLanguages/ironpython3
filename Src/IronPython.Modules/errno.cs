// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

using IronPython.Runtime;

[assembly: PythonModule("errno", typeof(IronPython.Modules.PythonErrorNumber))]
namespace IronPython.Modules {
    public static class PythonErrorNumber {
        public const string __doc__ = "Provides a list of common error numbers.  These numbers are frequently reported in various exceptions.";

        #region Generated Errno Codes

        // *** BEGIN GENERATED CODE ***
        // generated by function: generate_errno_codes from: generate_errno.py


        public static int EPERM => 1;

        public static int ENOENT => 2;

        public static int ESRCH => 3;

        public static int EINTR => 4;

        public static int EIO => 5;

        public static int ENXIO => 6;

        public static int E2BIG => 7;

        public static int ENOEXEC => 8;

        public static int EBADF => 9;

        public static int ECHILD => 10;

        public static int EAGAIN => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 11 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 35 : 11;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EDEADLK => 11;

        public static int ENOMEM => 12;

        public static int EACCES => 13;

        public static int EFAULT => 14;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ENOTBLK => 15;

        public static int EBUSY => 16;

        public static int EEXIST => 17;

        public static int EXDEV => 18;

        public static int ENODEV => 19;

        public static int ENOTDIR => 20;

        public static int EISDIR => 21;

        public static int EINVAL => 22;

        public static int ENFILE => 23;

        public static int EMFILE => 24;

        public static int ENOTTY => 25;

        public static int ETXTBSY => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 139 : 26;

        public static int EFBIG => 27;

        public static int ENOSPC => 28;

        public static int ESPIPE => 29;

        public static int EROFS => 30;

        public static int EMLINK => 31;

        public static int EPIPE => 32;

        public static int EDOM => 33;

        public static int ERANGE => 34;

        [PythonHidden(PlatformID.MacOSX)]
        public static int EDEADLOCK => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 36 : 35;

        public static int ENAMETOOLONG => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 38 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 63 : 36;

        public static int ENOLCK => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 39 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 77 : 37;

        public static int ENOSYS => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 40 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 78 : 38;

        public static int ENOTEMPTY => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 41 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 66 : 39;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ELOOP => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 62 : 40;

        public static int ENOMSG => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 122 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 91 : 42;

        public static int EIDRM => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 111 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 90 : 43;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ECHRNG => 44;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EL2NSYNC => 45;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EL3HLT => 46;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EL3RST => 47;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ELNRNG => 48;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EUNATCH => 49;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ENOCSI => 50;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EL2HLT => 51;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EBADE => 52;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EBADR => 53;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EXFULL => 54;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ENOANO => 55;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EBADRQC => 56;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EBADSLT => 57;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EBFONT => 59;

        public static int ENOSTR => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 125 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 99 : 60;

        public static int ENODATA => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 120 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 96 : 61;

        public static int ETIME => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 137 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 101 : 62;

        public static int ENOSR => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 124 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 98 : 63;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ENONET => 64;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ENOPKG => 65;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EREMOTE => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 71 : 66;

        public static int ENOLINK => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 121 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 97 : 67;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EPROCLIM => 67;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EADV => 68;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ESRMNT => 69;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ECOMM => 70;

        public static int EPROTO => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 134 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 100 : 71;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EMULTIHOP => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 95 : 72;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EBADRPC => 72;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EDOTDOT => 73;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int ERPCMISMATCH => 73;

        public static int EBADMSG => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 104 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 94 : 74;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EPROGUNAVAIL => 74;

        public static int EOVERFLOW => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 132 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 84 : 75;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EPROGMISMATCH => 75;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ENOTUNIQ => 76;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EPROCUNAVAIL => 76;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EBADFD => 77;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EREMCHG => 78;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ELIBACC => 79;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EFTYPE => 79;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ELIBBAD => 80;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EAUTH => 80;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ELIBSCN => 81;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int ENEEDAUTH => 81;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ELIBMAX => 82;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EPWROFF => 82;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ELIBEXEC => 83;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EDEVERR => 83;

        public static int EILSEQ => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 42 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 92 : 84;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ERESTART => 85;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EBADEXEC => 85;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ESTRPIPE => 86;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EBADARCH => 86;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EUSERS => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 68 : 87;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int ESHLIBVERS => 87;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ENOTSOCK => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 38 : 88;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EBADMACHO => 88;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EDESTADDRREQ => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 39 : 89;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EMSGSIZE => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 40 : 90;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EPROTOTYPE => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 41 : 91;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ENOPROTOOPT => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 42 : 92;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EPROTONOSUPPORT => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 43 : 93;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int ENOATTR => 93;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ESOCKTNOSUPPORT => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 44 : 94;

        public static int ENOTSUP => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 129 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 45 : 95;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EPFNOSUPPORT => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 46 : 96;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EAFNOSUPPORT => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 47 : 97;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EADDRINUSE => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 48 : 98;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EADDRNOTAVAIL => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 49 : 99;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ENETDOWN => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 50 : 100;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ENETUNREACH => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 51 : 101;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ENETRESET => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 52 : 102;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int EOPNOTSUPP => 102;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ECONNABORTED => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 53 : 103;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.Unix)]
        public static int ENOPOLICY => 103;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ECONNRESET => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 54 : 104;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ENOBUFS => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 55 : 105;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EISCONN => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 56 : 106;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ENOTCONN => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 57 : 107;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ESHUTDOWN => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 58 : 108;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ETOOMANYREFS => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 59 : 109;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ETIMEDOUT => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 60 : 110;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ECONNREFUSED => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 61 : 111;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EHOSTDOWN => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 64 : 112;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EHOSTUNREACH => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 65 : 113;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EALREADY => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 37 : 114;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EINPROGRESS => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 36 : 115;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int ESTALE => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 70 : 116;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EUCLEAN => 117;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ENOTNAM => 118;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ENAVAIL => 119;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EISNAM => 120;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EREMOTEIO => 121;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows)]
        public static int EDQUOT => RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 69 : 122;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ENOMEDIUM => 123;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EMEDIUMTYPE => 124;

        public static int ECANCELED => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 105 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 89 : 125;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ENOKEY => 126;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EKEYEXPIRED => 127;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EKEYREVOKED => 128;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int EKEYREJECTED => 129;

        public static int EOWNERDEAD => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 133 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 105 : 130;

        public static int ENOTRECOVERABLE => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? 127 : RuntimeInformation.IsOSPlatform(OSPlatform.OSX) ? 104 : 131;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Windows, PlatformID.MacOSX)]
        public static int ERFKILL => 132;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSABASEERR => 10000;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEINTR => 10004;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEBADF => 10009;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEACCES => 10013;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEFAULT => 10014;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEINVAL => 10022;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEMFILE => 10024;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEWOULDBLOCK => 10035;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEINPROGRESS => 10036;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEALREADY => 10037;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAENOTSOCK => 10038;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEDESTADDRREQ => 10039;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEMSGSIZE => 10040;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEPROTOTYPE => 10041;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAENOPROTOOPT => 10042;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEPROTONOSUPPORT => 10043;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAESOCKTNOSUPPORT => 10044;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEOPNOTSUPP => 10045;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEPFNOSUPPORT => 10046;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEAFNOSUPPORT => 10047;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEADDRINUSE => 10048;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEADDRNOTAVAIL => 10049;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAENETDOWN => 10050;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAENETUNREACH => 10051;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAENETRESET => 10052;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAECONNABORTED => 10053;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAECONNRESET => 10054;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAENOBUFS => 10055;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEISCONN => 10056;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAENOTCONN => 10057;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAESHUTDOWN => 10058;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAETOOMANYREFS => 10059;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAETIMEDOUT => 10060;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAECONNREFUSED => 10061;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAELOOP => 10062;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAENAMETOOLONG => 10063;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEHOSTDOWN => 10064;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEHOSTUNREACH => 10065;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAENOTEMPTY => 10066;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEPROCLIM => 10067;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEUSERS => 10068;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEDQUOT => 10069;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAESTALE => 10070;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEREMOTE => 10071;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSASYSNOTREADY => 10091;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAVERNOTSUPPORTED => 10092;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSANOTINITIALISED => 10093;

        [PythonHidden(PlatformsAttribute.PlatformFamily.Unix)]
        public static int WSAEDISCON => 10101;

        // *** END GENERATED CODE ***

        #endregion

        [SpecialName]
        public static void PerformModuleReload(PythonContext/*!*/ context, PythonDictionary/*!*/ dict) {
            PythonDictionary errorcode = new PythonDictionary();

            errorcode[E2BIG] = "E2BIG";
            errorcode[EACCES] = "EACCES";
            errorcode[EADDRINUSE] = "EADDRINUSE";
            errorcode[EADDRNOTAVAIL] = "EADDRNOTAVAIL";
            errorcode[EAFNOSUPPORT] = "EAFNOSUPPORT";
            errorcode[EAGAIN] = "EAGAIN";
            errorcode[EALREADY] = "EALREADY";
            errorcode[EBADF] = "EBADF";
            errorcode[EBUSY] = "EBUSY";
            errorcode[ECHILD] = "ECHILD";
            errorcode[ECONNABORTED] = "ECONNABORTED";
            errorcode[ECONNREFUSED] = "ECONNREFUSED";
            errorcode[ECONNRESET] = "ECONNRESET";
            errorcode[EDEADLK] = "EDEADLK";
            errorcode[EDEADLOCK] = "EDEADLOCK";
            errorcode[EDESTADDRREQ] = "EDESTADDRREQ";
            errorcode[EDOM] = "EDOM";
            errorcode[EDQUOT] = "EDQUOT";
            errorcode[EEXIST] = "EEXIST";
            errorcode[EFAULT] = "EFAULT";
            errorcode[EFBIG] = "EFBIG";
            errorcode[EHOSTDOWN] = "EHOSTDOWN";
            errorcode[EHOSTUNREACH] = "EHOSTUNREACH";
            errorcode[EILSEQ] = "EILSEQ";
            errorcode[EINPROGRESS] = "EINPROGRESS";
            errorcode[EINTR] = "EINTR";
            errorcode[EINVAL] = "EINVAL";
            errorcode[EIO] = "EIO";
            errorcode[EISCONN] = "EISCONN";
            errorcode[EISDIR] = "EISDIR";
            errorcode[ELOOP] = "ELOOP";
            errorcode[EMFILE] = "EMFILE";
            errorcode[EMLINK] = "EMLINK";
            errorcode[EMSGSIZE] = "EMSGSIZE";
            errorcode[ENAMETOOLONG] = "ENAMETOOLONG";
            errorcode[ENETDOWN] = "ENETDOWN";
            errorcode[ENETRESET] = "ENETRESET";
            errorcode[ENETUNREACH] = "ENETUNREACH";
            errorcode[ENFILE] = "ENFILE";
            errorcode[ENOBUFS] = "ENOBUFS";
            errorcode[ENODEV] = "ENODEV";
            errorcode[ENOENT] = "ENOENT";
            errorcode[ENOEXEC] = "ENOEXEC";
            errorcode[ENOLCK] = "ENOLCK";
            errorcode[ENOMEM] = "ENOMEM";
            errorcode[ENOPROTOOPT] = "ENOPROTOOPT";
            errorcode[ENOSPC] = "ENOSPC";
            errorcode[ENOSYS] = "ENOSYS";
            errorcode[ENOTCONN] = "ENOTCONN";
            errorcode[ENOTDIR] = "ENOTDIR";
            errorcode[ENOTEMPTY] = "ENOTEMPTY";
            errorcode[ENOTSOCK] = "ENOTSOCK";
            errorcode[ENOTTY] = "ENOTTY";
            errorcode[ENXIO] = "ENXIO";
            errorcode[EOPNOTSUPP] = "EOPNOTSUPP";
            errorcode[EPERM] = "EPERM";
            errorcode[EPFNOSUPPORT] = "EPFNOSUPPORT";
            errorcode[EPIPE] = "EPIPE";
            errorcode[EPROTONOSUPPORT] = "EPROTONOSUPPORT";
            errorcode[EPROTOTYPE] = "EPROTOTYPE";
            errorcode[ERANGE] = "ERANGE";
            errorcode[EREMOTE] = "EREMOTE";
            errorcode[EROFS] = "EROFS";
            errorcode[ESHUTDOWN] = "ESHUTDOWN";
            errorcode[ESOCKTNOSUPPORT] = "ESOCKTNOSUPPORT";
            errorcode[ESPIPE] = "ESPIPE";
            errorcode[ESRCH] = "ESRCH";
            errorcode[ESTALE] = "ESTALE";
            errorcode[ETIMEDOUT] = "ETIMEDOUT";
            errorcode[ETOOMANYREFS] = "ETOOMANYREFS";
            errorcode[EUSERS] = "EUSERS";
            errorcode[EXDEV] = "EXDEV";
            errorcode[WSABASEERR] = "WSABASEERR";
            errorcode[WSAEACCES] = "WSAEACCES";
            errorcode[WSAEADDRINUSE] = "WSAEADDRINUSE";
            errorcode[WSAEADDRNOTAVAIL] = "WSAEADDRNOTAVAIL";
            errorcode[WSAEAFNOSUPPORT] = "WSAEAFNOSUPPORT";
            errorcode[WSAEALREADY] = "WSAEALREADY";
            errorcode[WSAEBADF] = "WSAEBADF";
            errorcode[WSAECONNABORTED] = "WSAECONNABORTED";
            errorcode[WSAECONNREFUSED] = "WSAECONNREFUSED";
            errorcode[WSAECONNRESET] = "WSAECONNRESET";
            errorcode[WSAEDESTADDRREQ] = "WSAEDESTADDRREQ";
            errorcode[WSAEDISCON] = "WSAEDISCON";
            errorcode[WSAEDQUOT] = "WSAEDQUOT";
            errorcode[WSAEFAULT] = "WSAEFAULT";
            errorcode[WSAEHOSTDOWN] = "WSAEHOSTDOWN";
            errorcode[WSAEHOSTUNREACH] = "WSAEHOSTUNREACH";
            errorcode[WSAEINPROGRESS] = "WSAEINPROGRESS";
            errorcode[WSAEINTR] = "WSAEINTR";
            errorcode[WSAEINVAL] = "WSAEINVAL";
            errorcode[WSAEISCONN] = "WSAEISCONN";
            errorcode[WSAELOOP] = "WSAELOOP";
            errorcode[WSAEMFILE] = "WSAEMFILE";
            errorcode[WSAEMSGSIZE] = "WSAEMSGSIZE";
            errorcode[WSAENAMETOOLONG] = "WSAENAMETOOLONG";
            errorcode[WSAENETDOWN] = "WSAENETDOWN";
            errorcode[WSAENETRESET] = "WSAENETRESET";
            errorcode[WSAENETUNREACH] = "WSAENETUNREACH";
            errorcode[WSAENOBUFS] = "WSAENOBUFS";
            errorcode[WSAENOPROTOOPT] = "WSAENOPROTOOPT";
            errorcode[WSAENOTCONN] = "WSAENOTCONN";
            errorcode[WSAENOTEMPTY] = "WSAENOTEMPTY";
            errorcode[WSAENOTSOCK] = "WSAENOTSOCK";
            errorcode[WSAEOPNOTSUPP] = "WSAEOPNOTSUPP";
            errorcode[WSAEPFNOSUPPORT] = "WSAEPFNOSUPPORT";
            errorcode[WSAEPROCLIM] = "WSAEPROCLIM";
            errorcode[WSAEPROTONOSUPPORT] = "WSAEPROTONOSUPPORT";
            errorcode[WSAEPROTOTYPE] = "WSAEPROTOTYPE";
            errorcode[WSAEREMOTE] = "WSAEREMOTE";
            errorcode[WSAESHUTDOWN] = "WSAESHUTDOWN";
            errorcode[WSAESOCKTNOSUPPORT] = "WSAESOCKTNOSUPPORT";
            errorcode[WSAESTALE] = "WSAESTALE";
            errorcode[WSAETIMEDOUT] = "WSAETIMEDOUT";
            errorcode[WSAETOOMANYREFS] = "WSAETOOMANYREFS";
            errorcode[WSAEUSERS] = "WSAEUSERS";
            errorcode[WSAEWOULDBLOCK] = "WSAEWOULDBLOCK";
            errorcode[WSANOTINITIALISED] = "WSANOTINITIALISED";
            errorcode[WSASYSNOTREADY] = "WSASYSNOTREADY";
            errorcode[WSAVERNOTSUPPORTED] = "WSAVERNOTSUPPORTED";

            dict["errorcode"] = errorcode;
        }
    }
}
