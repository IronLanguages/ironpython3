<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">

  <PropertyGroup>
    <BuildFlavour Condition=" '$(BuildFlavour)' == '' ">Debug</BuildFlavour>
    <MainBuildPrefix Condition=" '$(MainBuildPrefix)' == '' "></MainBuildPrefix>
    <Mono Condition="'$(OS)' != 'Windows_NT'">true</Mono>

    <RootDir>$(MSBuildThisFileDirectory)</RootDir>
    <Solution>$(RootDir)\IronPython.sln</Solution>
    <UtilDir>$(RootDir)\Util</UtilDir>
    <ReferenceDir>$(RootDir)\Util\References</ReferenceDir>
    <BinDir>$(RootDir)\bin</BinDir>
    <BuildSysDir>$(RootDir)\Build</BuildSysDir>
    <MSBuildCommunityTasksPath>$(RootDir)\Util\MSBuildCommunityTasks</MSBuildCommunityTasksPath>
    <TargetFrameworks Condition="'$(TargetFrameworks)' == ''">net45;netcoreapp2.0</TargetFrameworks>
    <ChocolateyVersion>0.10.8</ChocolateyVersion>
  </PropertyGroup>
    
  <Import Project="$(BuildSysDir)\Versioning.targets" />
  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets" />
  
  <PropertyGroup>
    <StageDir>$(RootDir)Package\$(BuildFlavour)\Stage\IronPython-$(PackageVersion)</StageDir>
    <PackageDir>$(RootDir)Package\$(BuildFlavour)\Packages\IronPython-$(PackageVersion)</PackageDir>
  </PropertyGroup>

  <PropertyGroup>
    <BuildProperties>
      RootDir=$(RootDir);
      Solution=$(Solution);
      BuildFlavour=$(BuildFlavour);
      BinDir=$(BinDir);
      StageDir=$(StageDir);
      BuildSysDir=$(BuildSysDir);
      Mono=$(Mono);
    </BuildProperties>
  </PropertyGroup>
  
  <PropertyGroup>
    <NuGet>$(UtilDir)\NuGet\nuget.exe</NuGet>
    <NuGet Condition=" '$(Mono)' != '' ">mono $(NuGet)</NuGet>
  </PropertyGroup>

  <ItemGroup>
    <MainStageFiles Include="$(RootDir)\README.md" />
    <MainStageFiles Include="$(RootDir)\LICENSE" />
  </ItemGroup>

  <Target Name="RestoreReferences">
    <MSBuild Projects="$(Solution)" Targets="Restore" />
  </Target>

  <Target Name="Build" DependsOnTargets="RestoreReferences">
    <MSBuild 
      Projects="$(Solution)" 
      Targets="Build"
      Properties="$(BuildProperties);Configuration=$(BuildFlavour)" />
  </Target>

  <Target Name="Rebuild" DependsOnTargets="RestoreReferences">
    <MSBuild 
      Projects="$(Solution)" 
      Targets="Rebuild" 
      Properties="$(BuildProperties);Configuration=$(BuildFlavour)" />
  </Target>

  <Target Name="Clean">
    <MSBuild 
      Projects="$(Solution)" 
      Targets="Clean" 
      Properties="$(BuildProperties);Configuration=$(BuildFlavour)" />
  </Target>

  <Target Name="_MakeStageDir">
    <MakeDir Directories="$(StageDir)" Condition="!Exists('$(StageDir)')" />
  </Target>

  <Target Name="_MakePackageDir">
    <MakeDir Directories="$(PackageDir)" Condition="!Exists('$(PackageDir)')"/>
  </Target>

  <Target Name="_PlatformStage" DependsOnTargets="RestoreReferences;_MakeStageDir">
    <MSBuild 
      Projects="$(Solution)" 
      Targets="Build" 
      Properties="$(BuildProperties);Configuration=$(BuildFlavour);Staging=true" />
  </Target>

  <Target Name="_CopyDlrMainReferences" DependsOnTargets="_MakeStageDir">
    <ItemGroup>
      <DlrMainReferenceFiles
          Include="$(BinDir)\$(BuildFlavour)\*\Microsoft.Scripting.dll" />
      <DlrMainReferenceFiles
          Include="$(BinDir)\$(BuildFlavour)\*\Microsoft.Scripting.xml" />
      <DlrMainReferenceFiles
          Include="$(BinDir)\$(BuildFlavour)\*\Microsoft.Dynamic.dll" />
      <DlrMainReferenceFiles
          Include="$(BinDir)\$(BuildFlavour)\*\Microsoft.Dynamic.xml" />
    </ItemGroup>

    <Copy SourceFiles="@(DlrMainReferenceFiles)"
          DestinationFolder="$(StageDir)\%(RecursiveDir)" />
  </Target>

  <Target Name="_CopyMainStageFiles" DependsOnTargets="_MakeStageDir">
    <Copy SourceFiles="@(MainStageFiles)" DestinationFolder="$(StageDir)" />
  </Target>

  <Target Name="_CopyStdLib" DependsOnTargets="_MakeStageDir">
    <MSBuild Projects="$(RootDir)\Src\StdLib\StdLib.pyproj"
             Properties="OutputPath=$(StageDir)"
             Targets="Stage" />
  </Target>

  <Target Name="_ZipStdLib" DependsOnTargets="_CopyStdLib">
    <ItemGroup>
      <StdLibFiles Include="$(StageDir)\Lib\**\*.*" />
    </ItemGroup>
    <Zip ZipLevel="9" Files="@(StdLibFiles)" ZipFileName="$(PackageDir)\IronPython.StdLib.$(PackageVersion).zip" WorkingDirectory="$(StageDir)\Lib"/>
  </Target>

  <PropertyGroup>
    <StageDependsOn>
      _MakeStageDir;
      _MakePackageDir;
      _PlatformStage;
      _CopyDlrMainReferences;
      _CopyMainStageFiles;
      _CopyStdLib;
      _ZipStdLib
    </StageDependsOn>
  </PropertyGroup>

  <Target Name="Stage" DependsOnTargets="$(StageDependsOn)" />

  <Target Name="Package" DependsOnTargets="MsiPackage;ZipPackage;NuGetPackage;ChocoPackage;DebPackage" />

  <Target Name="MakePackageDir">
    <MakeDir Directories="$(PackageDir)" Condition="!Exists('$(PackageDir)')" />
  </Target>

  <ItemGroup>
    <Package Include="IronPython">
      <NuSpecDir>$(RootDir)\Package\nuget</NuSpecDir>
    </Package>
    <Package Include="IronPython.StdLib">
      <NuSpecDir>$(RootDir)\Package\nuget</NuSpecDir>
    </Package>
  </ItemGroup>

  <PropertyGroup>
    <NuSpecInputs>@(Package->'%(NuSpecDir)\%(Identity).nuspec')</NuSpecInputs>
    <NuPkgOutputs>@(Package->'$(PackageDir)\%(Identity).$(PackageVersion).nupkg')</NuPkgOutputs>
  </PropertyGroup>

  <Target Name="NuGetPackage" DependsOnTargets="Stage;MakePackageDir"
          Inputs="$(NuSpecInputs)"
          Outputs="$(NuPkgOutputs)">
    <ItemGroup>
      <DLLsFiles Include="**\DLLs\IronPython.*.dll" />
      <DLLsFiles Include="**\DLLs\IronPython.*.xml" />
    </ItemGroup>

    <!-- Copy the files from DLLs into the main directory for nuget packaging -->
    <Copy SourceFiles="@(DLLsFiles)" CopiedFiles="@(CopiedFiles)" DestinationFolder="$([System.IO.Path]::GetFullPath('%(DLLsFiles.RecursiveDir)\..'))">
      <Output TaskParameter="CopiedFiles" ItemName="TempCopied" />
    </Copy>
    <Exec Command="$(NuGet) pack &quot;%(NuSpecDir)\%(Package.Identity).nuspec&quot; -BasePath &quot;$(StageDir)&quot; -OutputDirectory &quot;$(PackageDir)&quot; -Version $(PackageVersion)" />
    <!-- Delete the copied files -->
    <Delete Files="@(TempCopied)" />
  </Target>

  <Target Name="ChocoPackage" Condition="'$(OS)' != 'Unix' " DependsOnTargets="Stage;MakePackageDir"
          Outputs="$(PackageDir)\ironpython.chocolatey.$(PackageVersion).nupkg">
    <Exec Command="$(NuGet) install chocolatey -Version $(ChocolateyVersion) -OutputDirectory &quot;$(RootDir)\packages&quot; -Source https://api.nuget.org/v3/index.json" />
    <Exec Command="$(RootDir)packages\chocolatey.$(ChocolateyVersion)\tools\chocolateyInstall\choco.exe pack &quot;$(RootDir)\Package\choco\IronPython.nuspec&quot; --outputdirectory &quot;$(StageDir)&quot; --version $(PackageVersion) STAGEDIR=&quot;$(StageDir)&quot;" />
    <Move SourceFiles="$(StageDir)\ironpython.$(PackageVersion).nupkg" DestinationFiles="$(PackageDir)\ironpython.chocolatey.$(PackageVersion).nupkg" />
  </Target>

  <Target Name="ZipPackage" DependsOnTargets="Stage;MakePackageDir"
          Outputs="$(PackageDir)\IronPython.$(PackageVersion).zip">
    <ItemGroup>
      <ZipFiles Include="$(StageDir)\**\*.*" Exclude="$(StageDir)\**\IronPythonTest.*" />
    </ItemGroup>
    <Zip ZipLevel="9" Files="@(ZipFiles)" ZipFileName="$(PackageDir)\IronPython.$(PackageVersion).zip" WorkingDirectory="$(StageDir)" />
  </Target>

  <Target Name="DebPackage" Condition="'$(OS)' == 'Unix' " DependsOnTargets="Stage;MakePackageDir" />
  
  <Target Name="MsiPackage" Condition="'$(OS)' != 'Unix' " DependsOnTargets="Stage;MakePackageDir">
    <ItemGroup>
      <CleanupFiles Include="$(StageDir)\net45\IronPythonTest.dll"/>
    </ItemGroup>
    <Delete Files="@(CleanupFiles)" />
    <MSBuild
        Projects="$(RootDir)\Package\msi\IronPython.Installer.wixproj"
        Properties="BindInputPaths=$(StageDir);OutputPath=$(PackageDir);Configuration=$(BuildFlavour);Platform=x64"
    />
  </Target>
</Project>
