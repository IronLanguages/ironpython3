#####################################################################################
#
#  Copyright (c) Microsoft Corporation. All rights reserved.
#
# This source code is subject to terms and conditions of the Apache License, Version 2.0. A
# copy of the license can be found in the License.html file at the root of this distribution. If
# you cannot locate the  Apache License, Version 2.0, please send an email to
# ironpy@microsoft.com. By using this source code in any fashion, you are agreeing to be bound
# by the terms of the Apache License, Version 2.0.
#
# You must not remove this notice, or any other, from this software.
#
#
#####################################################################################

"""
Sanity tests for exceptions automatically generated by generate_exceptions.py (that
cannot be hit under normal circumstances).
"""

import os
import sys
import unittest

from iptest import path_modifier, run_test, skipUnlessIronPython, source_root

def gen_testcase(exc_name):
    def test(self):
        import IronPython.Runtime.Exceptions as IRE
        e0 = eval("IRE.%s()" % exc_name)
        e2 = eval("IRE.%s('msg', e0)" % exc_name)
        self.assertEqual(e0.Message, e2.InnerException.Message)
        self.assertEqual("msg", e2.Message)
    return test

@skipUnlessIronPython()
class ExceptionsGeneratedTest(unittest.TestCase):
    def setUp(self):
        super(ExceptionsGeneratedTest, self).setUp()
        import clr
        clr.AddReference("IronPython")


with path_modifier(os.path.join(source_root(), 'Src', 'Scripts')):
    from generate_exceptions import pythonExcs as test_cases
test_cases = [x.replace('Error', '') + 'Exception' for x in test_cases]
for exc_name in test_cases:
    test_name = 'test_%s' % exc_name
    test = gen_testcase(exc_name)
    setattr(ExceptionsGeneratedTest, test_name, test)

run_test(__name__)