# Licensed to the .NET Foundation under one or more agreements.
# The .NET Foundation licenses this file to you under the Apache 2.0 License.
# See the LICENSE file in the project root for more information.

##
## Run selected tests from test_minidom from StdLib
##

import unittest
import sys

from iptest import run_test

import test.test_minidom

def load_tests(loader, standard_tests, pattern):
    if sys.implementation.name == 'ironpython':
        suite = unittest.TestSuite()
        suite.addTest(test.test_minidom.MinidomTest('testAAA'))
        suite.addTest(test.test_minidom.MinidomTest('testAAB'))
        suite.addTest(test.test_minidom.MinidomTest('testAddAttr'))
        suite.addTest(test.test_minidom.MinidomTest('testAltNewline'))
        suite.addTest(test.test_minidom.MinidomTest('testAppendChild'))
        suite.addTest(test.test_minidom.MinidomTest('testAppendChildFragment'))
        suite.addTest(test.test_minidom.MinidomTest('testAttrListItem'))
        suite.addTest(test.test_minidom.MinidomTest('testAttrListItemNS'))
        suite.addTest(test.test_minidom.MinidomTest('testAttrListItems'))
        suite.addTest(test.test_minidom.MinidomTest('testAttrListKeys'))
        suite.addTest(test.test_minidom.MinidomTest('testAttrListKeysNS'))
        suite.addTest(test.test_minidom.MinidomTest('testAttrListLength'))
        suite.addTest(test.test_minidom.MinidomTest('testAttrListValues'))
        suite.addTest(test.test_minidom.MinidomTest('testAttrList__getitem__'))
        suite.addTest(test.test_minidom.MinidomTest('testAttrList__setitem__'))
        suite.addTest(test.test_minidom.MinidomTest('testAttributeRepr'))
        suite.addTest(test.test_minidom.MinidomTest('testBug0777884'))
        suite.addTest(test.test_minidom.MinidomTest('testBug1433694'))
        suite.addTest(test.test_minidom.MinidomTest('testChangeAttr'))
        suite.addTest(test.test_minidom.MinidomTest('testChildNodes'))
        suite.addTest(test.test_minidom.MinidomTest('testCloneAttributeDeep'))
        suite.addTest(test.test_minidom.MinidomTest('testCloneAttributeShallow'))
        suite.addTest(test.test_minidom.MinidomTest('testCloneDocumentDeep'))
        suite.addTest(test.test_minidom.MinidomTest('testCloneDocumentShallow'))
        suite.addTest(test.test_minidom.MinidomTest('testCloneDocumentTypeDeepNotOk'))
        suite.addTest(test.test_minidom.MinidomTest('testCloneDocumentTypeDeepOk'))
        suite.addTest(test.test_minidom.MinidomTest('testCloneDocumentTypeShallowNotOk'))
        suite.addTest(test.test_minidom.MinidomTest('testCloneDocumentTypeShallowOk'))
        suite.addTest(test.test_minidom.MinidomTest('testCloneElementDeep'))
        suite.addTest(test.test_minidom.MinidomTest('testCloneElementShallow'))
        suite.addTest(unittest.expectedFailure(test.test_minidom.MinidomTest('testCloneNodeEntity'))) # https://github.com/IronLanguages/ironpython2/issues/464
        suite.addTest(test.test_minidom.MinidomTest('testClonePIDeep'))
        suite.addTest(test.test_minidom.MinidomTest('testClonePIShallow'))
        suite.addTest(test.test_minidom.MinidomTest('testComment'))
        suite.addTest(test.test_minidom.MinidomTest('testContext'))
        suite.addTest(test.test_minidom.MinidomTest('testCreateAttributeNS'))
        suite.addTest(test.test_minidom.MinidomTest('testCreateElementNS'))
        suite.addTest(test.test_minidom.MinidomTest('testDeepcopiedDocument'))
        suite.addTest(test.test_minidom.MinidomTest('testDeleteAttr'))
        suite.addTest(test.test_minidom.MinidomTest('testDocRemoveChild'))
        suite.addTest(test.test_minidom.MinidomTest('testDocumentAsyncAttr'))
        suite.addTest(test.test_minidom.MinidomTest('testDocumentElement'))
        suite.addTest(test.test_minidom.MinidomTest('testElement'))
        suite.addTest(test.test_minidom.MinidomTest('testElementReprAndStr'))
        suite.addTest(test.test_minidom.MinidomTest('testElementReprAndStrUnicode'))
        suite.addTest(test.test_minidom.MinidomTest('testElementReprAndStrUnicodeNS'))
        suite.addTest(test.test_minidom.MinidomTest('testEmptyXMLNSValue'))
        suite.addTest(unittest.expectedFailure(test.test_minidom.MinidomTest('testEncodings'))) # https://github.com/IronLanguages/ironpython2/issues/464
        suite.addTest(test.test_minidom.MinidomTest('testExceptionOnSpacesInXMLNSValue'))
        suite.addTest(test.test_minidom.MinidomTest('testFirstChild'))
        suite.addTest(test.test_minidom.MinidomTest('testGetAttrLength'))
        suite.addTest(test.test_minidom.MinidomTest('testGetAttrList'))
        suite.addTest(test.test_minidom.MinidomTest('testGetAttrValues'))
        suite.addTest(test.test_minidom.MinidomTest('testGetAttribute'))
        suite.addTest(test.test_minidom.MinidomTest('testGetAttributeNS'))
        suite.addTest(test.test_minidom.MinidomTest('testGetAttributeNode'))
        suite.addTest(test.test_minidom.MinidomTest('testGetElementsByTagName'))
        suite.addTest(test.test_minidom.MinidomTest('testGetElementsByTagNameNS'))
        suite.addTest(test.test_minidom.MinidomTest('testGetEmptyNodeListFromElementsByTagNameNS'))
        suite.addTest(test.test_minidom.MinidomTest('testHasAttribute'))
        suite.addTest(test.test_minidom.MinidomTest('testHasChildNodes'))
        suite.addTest(test.test_minidom.MinidomTest('testImportDocumentDeep'))
        suite.addTest(test.test_minidom.MinidomTest('testImportDocumentShallow'))
        suite.addTest(test.test_minidom.MinidomTest('testImportDocumentTypeDeep'))
        suite.addTest(test.test_minidom.MinidomTest('testImportDocumentTypeShallow'))
        suite.addTest(test.test_minidom.MinidomTest('testInsertBefore'))
        suite.addTest(test.test_minidom.MinidomTest('testInsertBeforeFragment'))
        suite.addTest(test.test_minidom.MinidomTest('testLegalChildren'))
        suite.addTest(test.test_minidom.MinidomTest('testNamedNodeMapSetItem'))
        suite.addTest(test.test_minidom.MinidomTest('testNodeListItem'))
        suite.addTest(test.test_minidom.MinidomTest('testNonZero'))
        suite.addTest(test.test_minidom.MinidomTest('testNormalize'))
        suite.addTest(test.test_minidom.MinidomTest('testNormalizeCombineAndNextSibling'))
        suite.addTest(test.test_minidom.MinidomTest('testNormalizeDeleteAndCombine'))
        suite.addTest(test.test_minidom.MinidomTest('testNormalizeDeleteWithNextSibling'))
        suite.addTest(test.test_minidom.MinidomTest('testNormalizeDeleteWithPrevSibling'))
        suite.addTest(test.test_minidom.MinidomTest('testNormalizeDeleteWithTwoNonTextSiblings'))
        suite.addTest(test.test_minidom.MinidomTest('testNormalizeRecursion'))
        suite.addTest(test.test_minidom.MinidomTest('testParents'))
        suite.addTest(test.test_minidom.MinidomTest('testParse'))
        suite.addTest(test.test_minidom.MinidomTest('testParseAttributeNamespaces'))
        suite.addTest(test.test_minidom.MinidomTest('testParseAttributes'))
        suite.addTest(test.test_minidom.MinidomTest('testParseElement'))
        suite.addTest(test.test_minidom.MinidomTest('testParseElementNamespaces'))
        suite.addTest(test.test_minidom.MinidomTest('testParseFromBinaryFile'))
        suite.addTest(test.test_minidom.MinidomTest('testParseFromTextFile'))
        suite.addTest(test.test_minidom.MinidomTest('testParseProcessingInstructions'))
        suite.addTest(test.test_minidom.MinidomTest('testParseString'))
        suite.addTest(test.test_minidom.MinidomTest('testPatch1094164'))
        suite.addTest(test.test_minidom.MinidomTest('testPickledDocument'))
        suite.addTest(test.test_minidom.MinidomTest('testProcessingInstruction'))
        suite.addTest(test.test_minidom.MinidomTest('testProcessingInstructionNameError'))
        suite.addTest(test.test_minidom.MinidomTest('testProcessingInstructionRepr'))
        suite.addTest(test.test_minidom.MinidomTest('testRemoveAttr'))
        suite.addTest(test.test_minidom.MinidomTest('testRemoveAttrNS'))
        suite.addTest(test.test_minidom.MinidomTest('testRemoveAttributeNode'))
        suite.addTest(test.test_minidom.MinidomTest('testRemoveNamedItem'))
        suite.addTest(test.test_minidom.MinidomTest('testRemoveNamedItemNS'))
        suite.addTest(test.test_minidom.MinidomTest('testRenameAttribute'))
        suite.addTest(test.test_minidom.MinidomTest('testRenameElement'))
        suite.addTest(test.test_minidom.MinidomTest('testRenameOther'))
        suite.addTest(test.test_minidom.MinidomTest('testReplaceChildFragment'))
        suite.addTest(test.test_minidom.MinidomTest('testReplaceWholeText'))
        suite.addTest(test.test_minidom.MinidomTest('testSchemaType'))
        suite.addTest(test.test_minidom.MinidomTest('testSerializeCommentNodeWithDoubleHyphen'))
        suite.addTest(test.test_minidom.MinidomTest('testSetAttrValueandNodeValue'))
        suite.addTest(test.test_minidom.MinidomTest('testSetIdAttribute'))
        suite.addTest(test.test_minidom.MinidomTest('testSetIdAttributeNS'))
        suite.addTest(test.test_minidom.MinidomTest('testSetIdAttributeNode'))
        suite.addTest(test.test_minidom.MinidomTest('testSiblings'))
        suite.addTest(test.test_minidom.MinidomTest('testTextNodeRepr'))
        suite.addTest(test.test_minidom.MinidomTest('testTextRepr'))
        suite.addTest(test.test_minidom.MinidomTest('testTooManyDocumentElements'))
        suite.addTest(test.test_minidom.MinidomTest('testUnlink'))
        suite.addTest(test.test_minidom.MinidomTest('testUserData'))
        suite.addTest(test.test_minidom.MinidomTest('testWholeText'))
        suite.addTest(test.test_minidom.MinidomTest('testWriteText'))
        suite.addTest(test.test_minidom.MinidomTest('testWriteXML'))
        suite.addTest(test.test_minidom.MinidomTest('test_toprettyxml_preserves_content_of_text_node'))
        suite.addTest(test.test_minidom.MinidomTest('test_toprettyxml_with_adjacent_text_nodes'))
        suite.addTest(test.test_minidom.MinidomTest('test_toprettyxml_with_text_nodes'))
        return suite

    else:
        return loader.loadTestsFromModule(test.test_minidom, pattern)

run_test(__name__)
