# Licensed to the .NET Foundation under one or more agreements.
# The .NET Foundation licenses this file to you under the Apache 2.0 License.
# See the LICENSE file in the project root for more information.

##
## Run selected tests from test_socket from StdLib
##

import unittest
import sys

from iptest import is_linux, is_posix, run_test

import test.test_socket

def load_tests(loader, standard_tests, pattern):
    if sys.implementation.name == 'ironpython':
        suite = unittest.TestSuite()
        suite.addTest(test.test_socket.BasicCANTest('testBCMConstants'))
        suite.addTest(test.test_socket.BasicCANTest('testBindAny'))
        suite.addTest(test.test_socket.BasicCANTest('testCreateBCMSocket'))
        suite.addTest(test.test_socket.BasicCANTest('testCreateSocket'))
        suite.addTest(test.test_socket.BasicCANTest('testCrucialConstants'))
        suite.addTest(test.test_socket.BasicCANTest('testFilter'))
        suite.addTest(test.test_socket.BasicCANTest('testLoopback'))
        suite.addTest(test.test_socket.BasicCANTest('testTooLongInterfaceName'))
        suite.addTest(test.test_socket.BasicRDSTest('testCreateSocket'))
        suite.addTest(test.test_socket.BasicRDSTest('testCrucialConstants'))
        suite.addTest(test.test_socket.BasicRDSTest('testSocketBufferSize'))
        if not is_posix: # TODO: figure out - failure in setup
            suite.addTest(test.test_socket.BasicSocketPairTest('testDefaults'))
            suite.addTest(test.test_socket.BasicSocketPairTest('testRecv'))
            suite.addTest(test.test_socket.BasicSocketPairTest('testSend'))
        suite.addTest(unittest.expectedFailure(test.test_socket.BasicTCPTest('testDetach'))) # https://github.com/IronLanguages/ironpython3/issues/1224
        suite.addTest(unittest.expectedFailure(test.test_socket.BasicTCPTest('testDup'))) # https://github.com/IronLanguages/ironpython3/issues/1223
        suite.addTest(unittest.expectedFailure(test.test_socket.BasicTCPTest('testFromFd'))) # https://github.com/IronLanguages/ironpython3/issues/1223
        suite.addTest(test.test_socket.BasicTCPTest('testOverFlowRecv'))
        suite.addTest(test.test_socket.BasicTCPTest('testOverFlowRecvFrom'))
        suite.addTest(test.test_socket.BasicTCPTest('testRecv'))
        suite.addTest(test.test_socket.BasicTCPTest('testRecvFrom'))
        suite.addTest(test.test_socket.BasicTCPTest('testSendAll'))
        suite.addTest(test.test_socket.BasicTCPTest('testShutdown'))
        suite.addTest(test.test_socket.BasicTCPTest('testShutdown_overflow'))
        suite.addTest(unittest.expectedFailure(test.test_socket.BasicTCPTest2('testDetach'))) # https://github.com/IronLanguages/ironpython3/issues/1224
        suite.addTest(unittest.expectedFailure(test.test_socket.BasicTCPTest2('testDup'))) # https://github.com/IronLanguages/ironpython3/issues/1223
        suite.addTest(unittest.expectedFailure(test.test_socket.BasicTCPTest2('testFromFd'))) # https://github.com/IronLanguages/ironpython3/issues/1223
        suite.addTest(test.test_socket.BasicTCPTest2('testOverFlowRecv'))
        suite.addTest(test.test_socket.BasicTCPTest2('testOverFlowRecvFrom'))
        suite.addTest(test.test_socket.BasicTCPTest2('testRecv'))
        suite.addTest(test.test_socket.BasicTCPTest2('testRecvFrom'))
        suite.addTest(test.test_socket.BasicTCPTest2('testSendAll'))
        suite.addTest(test.test_socket.BasicTCPTest2('testShutdown'))
        suite.addTest(test.test_socket.BasicTCPTest2('testShutdown_overflow'))
        suite.addTest(test.test_socket.BasicUDPTest('testRecvFrom'))
        suite.addTest(test.test_socket.BasicUDPTest('testRecvFromNegative'))
        suite.addTest(test.test_socket.BasicUDPTest('testSendtoAndRecv'))
        suite.addTest(test.test_socket.BufferIOTest('testRecvFromIntoArray'))
        suite.addTest(test.test_socket.BufferIOTest('testRecvFromIntoBytearray'))
        suite.addTest(test.test_socket.BufferIOTest('testRecvFromIntoEmptyBuffer'))
        suite.addTest(test.test_socket.BufferIOTest('testRecvFromIntoMemoryview'))
        suite.addTest(test.test_socket.BufferIOTest('testRecvFromIntoSmallBuffer'))
        suite.addTest(test.test_socket.BufferIOTest('testRecvIntoArray'))
        suite.addTest(test.test_socket.BufferIOTest('testRecvIntoBytearray'))
        suite.addTest(test.test_socket.BufferIOTest('testRecvIntoMemoryview'))
        suite.addTest(test.test_socket.CANTest('testBCM'))
        suite.addTest(test.test_socket.CANTest('testSendFrame'))
        suite.addTest(test.test_socket.CANTest('testSendMaxFrame'))
        suite.addTest(test.test_socket.CANTest('testSendMultiFrames'))
        suite.addTest(test.test_socket.CmsgMacroTests('testCMSG_LEN'))
        suite.addTest(test.test_socket.CmsgMacroTests('testCMSG_SPACE'))
        suite.addTest(test.test_socket.ContextManagersTest('testCreateConnectionBase'))
        suite.addTest(test.test_socket.ContextManagersTest('testCreateConnectionClose'))
        suite.addTest(test.test_socket.FileObjectClassTestCase('testAttributes'))
        suite.addTest(test.test_socket.FileObjectClassTestCase('testCloseAfterMakefile'))
        suite.addTest(test.test_socket.FileObjectClassTestCase('testClosedAttr'))
        suite.addTest(test.test_socket.FileObjectClassTestCase('testFullRead'))
        suite.addTest(test.test_socket.FileObjectClassTestCase('testMakefileAfterMakefileClose'))
        suite.addTest(test.test_socket.FileObjectClassTestCase('testReadAfterTimeout'))
        suite.addTest(test.test_socket.FileObjectClassTestCase('testReadline'))
        suite.addTest(test.test_socket.FileObjectClassTestCase('testRealClose'))
        suite.addTest(test.test_socket.FileObjectClassTestCase('testSmallRead'))
        suite.addTest(test.test_socket.FileObjectClassTestCase('testUnbufferedRead'))
        suite.addTest(test.test_socket.FileObjectInterruptedTestCase('test_default'))
        suite.addTest(test.test_socket.FileObjectInterruptedTestCase('test_no_buffer'))
        suite.addTest(test.test_socket.FileObjectInterruptedTestCase('test_with_1k_buffer'))
        suite.addTest(test.test_socket.GeneralModuleTests('testCrucialConstants'))
        suite.addTest(test.test_socket.GeneralModuleTests('testDefaultTimeout'))
        suite.addTest(test.test_socket.GeneralModuleTests('testGetServBy'))
        suite.addTest(test.test_socket.GeneralModuleTests('testGetSockOpt'))
        suite.addTest(test.test_socket.GeneralModuleTests('testGetaddrinfo'))
        suite.addTest(test.test_socket.GeneralModuleTests('testHostnameRes'))
        suite.addTest(test.test_socket.GeneralModuleTests('testIPv4_inet_aton_fourbytes'))
        suite.addTest(test.test_socket.GeneralModuleTests('testIPv4toString'))
        suite.addTest(test.test_socket.GeneralModuleTests('testIPv6toString'))
        suite.addTest(test.test_socket.GeneralModuleTests('testInterfaceNameIndex'))
        suite.addTest(test.test_socket.GeneralModuleTests('testInterpreterCrash'))
        suite.addTest(test.test_socket.GeneralModuleTests('testInvalidInterfaceNameIndex'))
        suite.addTest(test.test_socket.GeneralModuleTests('testNewAttributes'))
        suite.addTest(test.test_socket.GeneralModuleTests('testNtoH'))
        suite.addTest(test.test_socket.GeneralModuleTests('testNtoHErrors'))
        suite.addTest(test.test_socket.GeneralModuleTests('testRefCountGetNameInfo'))
        suite.addTest(test.test_socket.GeneralModuleTests('testSendAfterClose'))
        suite.addTest(unittest.expectedFailure(test.test_socket.GeneralModuleTests('testSendtoErrors'))) # TypeError messages all different
        suite.addTest(test.test_socket.GeneralModuleTests('testSetSockOpt'))
        suite.addTest(test.test_socket.GeneralModuleTests('testSockName'))
        suite.addTest(test.test_socket.GeneralModuleTests('testSocketError'))
        suite.addTest(test.test_socket.GeneralModuleTests('testStringToIPv4'))
        suite.addTest(test.test_socket.GeneralModuleTests('testStringToIPv6'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_SocketType_is_socketobject'))
        suite.addTest(unittest.expectedFailure(test.test_socket.GeneralModuleTests('test_csocket_repr'))) # https://github.com/IronLanguages/ironpython3/issues/1221
        suite.addTest(test.test_socket.GeneralModuleTests('test_dealloc_warn'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_flowinfo'))
        if not is_posix: # TODO: figure out
            suite.addTest(unittest.expectedFailure(test.test_socket.GeneralModuleTests('test_getnameinfo'))) # https://github.com/IronLanguages/ironpython3/issues/1222
        suite.addTest(test.test_socket.GeneralModuleTests('test_getsockaddrarg'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_host_resolution'))
        if is_linux:
            suite.addTest(unittest.expectedFailure(test.test_socket.GeneralModuleTests('test_idna'))) # TODO: figure out
        else:
            suite.addTest(test.test_socket.GeneralModuleTests('test_idna'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_listen_backlog'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_listen_backlog_overflow'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_name_closed_socketio'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_pickle'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_repr'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_sendall_interrupted'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_sendall_interrupted_with_timeout'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_sethostname'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_sock_ioctl'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_str_for_enums'))
        suite.addTest(unittest.expectedFailure(test.test_socket.GeneralModuleTests('test_uknown_socket_family_repr'))) # TODO: figure out
        suite.addTest(test.test_socket.GeneralModuleTests('test_unusable_closed_socketio'))
        suite.addTest(test.test_socket.GeneralModuleTests('test_weakref'))
        suite.addTest(test.test_socket.InheritanceTest('test_SOCK_CLOEXEC'))
        suite.addTest(unittest.expectedFailure(test.test_socket.InheritanceTest('test_default_inheritable'))) # https://github.com/IronLanguages/ironpython3/issues/1225
        suite.addTest(unittest.expectedFailure(test.test_socket.InheritanceTest('test_dup'))) # https://github.com/IronLanguages/ironpython3/issues/1223
        suite.addTest(unittest.expectedFailure(test.test_socket.InheritanceTest('test_get_inheritable_cloexec'))) # https://github.com/IronLanguages/ironpython3/issues/1225
        suite.addTest(unittest.expectedFailure(test.test_socket.InheritanceTest('test_set_inheritable'))) # https://github.com/IronLanguages/ironpython3/issues/1225
        suite.addTest(unittest.expectedFailure(test.test_socket.InheritanceTest('test_set_inheritable_cloexec'))) # https://github.com/IronLanguages/ironpython3/issues/1225
        suite.addTest(unittest.expectedFailure(test.test_socket.InheritanceTest('test_socketpair'))) # https://github.com/IronLanguages/ironpython3/issues/1225
        suite.addTest(test.test_socket.InterruptedRecvTimeoutTest('testInterruptedRecvIntoTimeout'))
        suite.addTest(test.test_socket.InterruptedRecvTimeoutTest('testInterruptedRecvTimeout'))
        suite.addTest(test.test_socket.InterruptedRecvTimeoutTest('testInterruptedRecvfromIntoTimeout'))
        suite.addTest(test.test_socket.InterruptedRecvTimeoutTest('testInterruptedRecvfromTimeout'))
        suite.addTest(test.test_socket.InterruptedRecvTimeoutTest('testInterruptedRecvmsgIntoTimeout'))
        suite.addTest(test.test_socket.InterruptedRecvTimeoutTest('testInterruptedRecvmsgTimeout'))
        suite.addTest(test.test_socket.InterruptedSendTimeoutTest('testInterruptedSendTimeout'))
        suite.addTest(test.test_socket.InterruptedSendTimeoutTest('testInterruptedSendmsgTimeout'))
        suite.addTest(test.test_socket.InterruptedSendTimeoutTest('testInterruptedSendtoTimeout'))
        suite.addTest(test.test_socket.LineBufferedFileObjectClassTestCase('testAttributes'))
        suite.addTest(test.test_socket.LineBufferedFileObjectClassTestCase('testCloseAfterMakefile'))
        suite.addTest(test.test_socket.LineBufferedFileObjectClassTestCase('testClosedAttr'))
        suite.addTest(test.test_socket.LineBufferedFileObjectClassTestCase('testFullRead'))
        suite.addTest(test.test_socket.LineBufferedFileObjectClassTestCase('testMakefileAfterMakefileClose'))
        suite.addTest(test.test_socket.LineBufferedFileObjectClassTestCase('testReadAfterTimeout'))
        suite.addTest(test.test_socket.LineBufferedFileObjectClassTestCase('testReadline'))
        suite.addTest(test.test_socket.LineBufferedFileObjectClassTestCase('testRealClose'))
        suite.addTest(test.test_socket.LineBufferedFileObjectClassTestCase('testSmallRead'))
        suite.addTest(test.test_socket.LineBufferedFileObjectClassTestCase('testUnbufferedRead'))
        suite.addTest(test.test_socket.NetworkConnectionAttributesTest('testFamily'))
        suite.addTest(test.test_socket.NetworkConnectionAttributesTest('testSourceAddress'))
        suite.addTest(test.test_socket.NetworkConnectionAttributesTest('testTimeoutDefault'))
        suite.addTest(test.test_socket.NetworkConnectionAttributesTest('testTimeoutNone'))
        suite.addTest(test.test_socket.NetworkConnectionAttributesTest('testTimeoutValueNamed'))
        suite.addTest(test.test_socket.NetworkConnectionAttributesTest('testTimeoutValueNonamed'))
        suite.addTest(test.test_socket.NetworkConnectionBehaviourTest('testInsideTimeout'))
        suite.addTest(test.test_socket.NetworkConnectionBehaviourTest('testOutsideTimeout'))
        suite.addTest(test.test_socket.NetworkConnectionNoServer('test_connect'))
        suite.addTest(test.test_socket.NetworkConnectionNoServer('test_create_connection'))
        suite.addTest(test.test_socket.NetworkConnectionNoServer('test_create_connection_timeout'))
        if not is_posix: # TODO: figure out - failure in teardown
            suite.addTest(test.test_socket.NonBlockingTCPTests('testAccept'))
        suite.addTest(test.test_socket.NonBlockingTCPTests('testConnect'))
        suite.addTest(test.test_socket.NonBlockingTCPTests('testInheritFlags'))
        suite.addTest(test.test_socket.NonBlockingTCPTests('testInitNonBlocking'))
        if is_posix:
            suite.addTest(unittest.expectedFailure(test.test_socket.NonBlockingTCPTests('testRecv'))) # TODO: figure out
        else:
            suite.addTest(test.test_socket.NonBlockingTCPTests('testRecv'))
        suite.addTest(test.test_socket.NonBlockingTCPTests('testSetBlocking'))
        suite.addTest(test.test_socket.NonBlockingTCPTests('testSetBlocking_overflow'))
        suite.addTest(test.test_socket.NonblockConstantTest('test_SOCK_NONBLOCK'))
        suite.addTest(test.test_socket.RDSTest('testCongestion'))
        suite.addTest(test.test_socket.RDSTest('testPeek'))
        suite.addTest(test.test_socket.RDSTest('testSelect'))
        suite.addTest(test.test_socket.RDSTest('testSendAndRecv'))
        suite.addTest(test.test_socket.RDSTest('testSendAndRecvMsg'))
        suite.addTest(test.test_socket.RDSTest('testSendAndRecvMulti'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testCmsgTruncNoBufSize'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testOddCmsgSize'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testRecvHopLimit'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testRecvHopLimitCMSG_SPACE'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testRecvTrafficClassAndHopLimit'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testRecvTrafficClassAndHopLimitCMSG_SPACE'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testSecomdCmsgTruncInData'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testSecondCmsgTrunc0'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testSecondCmsgTrunc1'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testSecondCmsgTrunc2Int'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testSecondCmsgTruncLen0Minus1'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testSetHopLimit'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testSetTrafficClassAndHopLimit'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testSingleCmsgTrunc0'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testSingleCmsgTrunc1'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testSingleCmsgTrunc2Int'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testSingleCmsgTruncInData'))
        suite.addTest(test.test_socket.RFC3542AncillaryTest('testSingleCmsgTruncLen0Minus1'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testCmsgTruncNoBufSize'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testOddCmsgSize'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testRecvHopLimit'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testRecvHopLimitCMSG_SPACE'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testRecvTrafficClassAndHopLimit'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testRecvTrafficClassAndHopLimitCMSG_SPACE'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testSecomdCmsgTruncInData'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testSecondCmsgTrunc0'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testSecondCmsgTrunc1'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testSecondCmsgTrunc2Int'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testSecondCmsgTruncLen0Minus1'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testSetHopLimit'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testSetTrafficClassAndHopLimit'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testSingleCmsgTrunc0'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testSingleCmsgTrunc1'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testSingleCmsgTrunc2Int'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testSingleCmsgTruncInData'))
        suite.addTest(test.test_socket.RecvmsgIntoRFC3542AncillaryUDP6Test('testSingleCmsgTruncLen0Minus1'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testCmsgTrunc0'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testCmsgTrunc1'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testCmsgTrunc2Int'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testCmsgTruncLen0'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testCmsgTruncLen0Minus1'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testCmsgTruncLen0Plus1'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testCmsgTruncLen1'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testCmsgTruncLen2Minus1'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testCmsgTruncNoBufSize'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testFDPassCMSG_LEN'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testFDPassCMSG_SPACE'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testFDPassEmpty'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testFDPassPartialInt'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testFDPassPartialIntInMiddle'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testFDPassSeparate'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testFDPassSeparateMinSpace'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testFDPassSimple'))
        suite.addTest(test.test_socket.RecvmsgIntoSCMRightsStreamTest('testMultipleFDPass'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsg'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgAfterClose'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgEOF'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgExplicitDefaults'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgFromSendmsg'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgIntoArray'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgIntoBadArgs'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgIntoGenerator'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgIntoScatter'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgLongAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgOverflow'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgPeek'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgShortAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgShorter'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgTimeout'))
        suite.addTest(test.test_socket.RecvmsgIntoSCTPStreamTest('testRecvmsgTrunc'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsg'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgAfterClose'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgEOF'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgExplicitDefaults'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgFromSendmsg'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgIntoArray'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgIntoBadArgs'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgIntoGenerator'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgIntoScatter'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgLongAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgOverflow'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgPeek'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgShortAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgShorter'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgTimeout'))
        suite.addTest(test.test_socket.RecvmsgIntoTCPTest('testRecvmsgTrunc'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsg'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgAfterClose'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgExplicitDefaults'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgFromSendmsg'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgIntoArray'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgIntoBadArgs'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgIntoGenerator'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgIntoScatter'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgLongAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgPeek'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgShortAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgShorter'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgTimeout'))
        suite.addTest(test.test_socket.RecvmsgIntoUDP6Test('testRecvmsgTrunc'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsg'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgAfterClose'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgExplicitDefaults'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgFromSendmsg'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgIntoArray'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgIntoBadArgs'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgIntoGenerator'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgIntoScatter'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgLongAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgPeek'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgShortAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgShorter'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgTimeout'))
        suite.addTest(test.test_socket.RecvmsgIntoUDPTest('testRecvmsgTrunc'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsg'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgAfterClose'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgEOF'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgExplicitDefaults'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgFromSendmsg'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgIntoArray'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgIntoBadArgs'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgIntoGenerator'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgIntoScatter'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgLongAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgOverflow'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgPeek'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgShortAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgShorter'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgTimeout'))
        suite.addTest(test.test_socket.RecvmsgIntoUnixStreamTest('testRecvmsgTrunc'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testCmsgTruncNoBufSize'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testOddCmsgSize'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testRecvHopLimit'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testRecvHopLimitCMSG_SPACE'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testRecvTrafficClassAndHopLimit'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testRecvTrafficClassAndHopLimitCMSG_SPACE'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testSecomdCmsgTruncInData'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testSecondCmsgTrunc0'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testSecondCmsgTrunc1'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testSecondCmsgTrunc2Int'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testSecondCmsgTruncLen0Minus1'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testSetHopLimit'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testSetTrafficClassAndHopLimit'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testSingleCmsgTrunc0'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testSingleCmsgTrunc1'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testSingleCmsgTrunc2Int'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testSingleCmsgTruncInData'))
        suite.addTest(test.test_socket.RecvmsgRFC3542AncillaryUDP6Test('testSingleCmsgTruncLen0Minus1'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testCmsgTrunc0'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testCmsgTrunc1'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testCmsgTrunc2Int'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testCmsgTruncLen0'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testCmsgTruncLen0Minus1'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testCmsgTruncLen0Plus1'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testCmsgTruncLen1'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testCmsgTruncLen2Minus1'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testCmsgTruncNoBufSize'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testFDPassCMSG_LEN'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testFDPassCMSG_SPACE'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testFDPassEmpty'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testFDPassPartialInt'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testFDPassPartialIntInMiddle'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testFDPassSeparate'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testFDPassSeparateMinSpace'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testFDPassSimple'))
        suite.addTest(test.test_socket.RecvmsgSCMRightsStreamTest('testMultipleFDPass'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsg'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsgAfterClose'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsgBadArgs'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsgEOF'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsgExplicitDefaults'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsgFromSendmsg'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsgLongAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsgOverflow'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsgPeek'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsgShortAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsgShorter'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsgTimeout'))
        suite.addTest(test.test_socket.RecvmsgSCTPStreamTest('testRecvmsgTrunc'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsg'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsgAfterClose'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsgBadArgs'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsgEOF'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsgExplicitDefaults'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsgFromSendmsg'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsgLongAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsgOverflow'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsgPeek'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsgShortAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsgShorter'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsgTimeout'))
        suite.addTest(test.test_socket.RecvmsgTCPTest('testRecvmsgTrunc'))
        suite.addTest(test.test_socket.RecvmsgUDP6Test('testRecvmsg'))
        suite.addTest(test.test_socket.RecvmsgUDP6Test('testRecvmsgAfterClose'))
        suite.addTest(test.test_socket.RecvmsgUDP6Test('testRecvmsgBadArgs'))
        suite.addTest(test.test_socket.RecvmsgUDP6Test('testRecvmsgExplicitDefaults'))
        suite.addTest(test.test_socket.RecvmsgUDP6Test('testRecvmsgFromSendmsg'))
        suite.addTest(test.test_socket.RecvmsgUDP6Test('testRecvmsgLongAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgUDP6Test('testRecvmsgPeek'))
        suite.addTest(test.test_socket.RecvmsgUDP6Test('testRecvmsgShortAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgUDP6Test('testRecvmsgShorter'))
        suite.addTest(test.test_socket.RecvmsgUDP6Test('testRecvmsgTimeout'))
        suite.addTest(test.test_socket.RecvmsgUDP6Test('testRecvmsgTrunc'))
        suite.addTest(test.test_socket.RecvmsgUDPTest('testRecvmsg'))
        suite.addTest(test.test_socket.RecvmsgUDPTest('testRecvmsgAfterClose'))
        suite.addTest(test.test_socket.RecvmsgUDPTest('testRecvmsgBadArgs'))
        suite.addTest(test.test_socket.RecvmsgUDPTest('testRecvmsgExplicitDefaults'))
        suite.addTest(test.test_socket.RecvmsgUDPTest('testRecvmsgFromSendmsg'))
        suite.addTest(test.test_socket.RecvmsgUDPTest('testRecvmsgLongAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgUDPTest('testRecvmsgPeek'))
        suite.addTest(test.test_socket.RecvmsgUDPTest('testRecvmsgShortAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgUDPTest('testRecvmsgShorter'))
        suite.addTest(test.test_socket.RecvmsgUDPTest('testRecvmsgTimeout'))
        suite.addTest(test.test_socket.RecvmsgUDPTest('testRecvmsgTrunc'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsg'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsgAfterClose'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsgBadArgs'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsgEOF'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsgExplicitDefaults'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsgFromSendmsg'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsgLongAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsgOverflow'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsgPeek'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsgShortAncillaryBuf'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsgShorter'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsgTimeout'))
        suite.addTest(test.test_socket.RecvmsgUnixStreamTest('testRecvmsgTrunc'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsg'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsgAfterClose'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsgAncillaryGenerator'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsgArray'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsgBadArgs'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsgBadCmsg'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsgBadMultiCmsg'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsgDataGenerator'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsgDontWait'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsgExcessCmsgReject'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsgExplicitNoneAddr'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsgGather'))
        suite.addTest(test.test_socket.SendmsgSCTPStreamTest('testSendmsgTimeout'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsg'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsgAfterClose'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsgAncillaryGenerator'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsgArray'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsgBadArgs'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsgBadCmsg'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsgBadMultiCmsg'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsgDataGenerator'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsgDontWait'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsgExcessCmsgReject'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsgExplicitNoneAddr'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsgGather'))
        suite.addTest(test.test_socket.SendmsgTCPTest('testSendmsgTimeout'))
        suite.addTest(test.test_socket.SendmsgUDP6Test('testSendmsg'))
        suite.addTest(test.test_socket.SendmsgUDP6Test('testSendmsgAfterClose'))
        suite.addTest(test.test_socket.SendmsgUDP6Test('testSendmsgAncillaryGenerator'))
        suite.addTest(test.test_socket.SendmsgUDP6Test('testSendmsgArray'))
        suite.addTest(test.test_socket.SendmsgUDP6Test('testSendmsgBadArgs'))
        suite.addTest(test.test_socket.SendmsgUDP6Test('testSendmsgBadCmsg'))
        suite.addTest(test.test_socket.SendmsgUDP6Test('testSendmsgBadMultiCmsg'))
        suite.addTest(test.test_socket.SendmsgUDP6Test('testSendmsgDataGenerator'))
        suite.addTest(test.test_socket.SendmsgUDP6Test('testSendmsgExcessCmsgReject'))
        suite.addTest(test.test_socket.SendmsgUDP6Test('testSendmsgGather'))
        suite.addTest(test.test_socket.SendmsgUDP6Test('testSendmsgNoDestAddr'))
        suite.addTest(test.test_socket.SendmsgUDPTest('testSendmsg'))
        suite.addTest(test.test_socket.SendmsgUDPTest('testSendmsgAfterClose'))
        suite.addTest(test.test_socket.SendmsgUDPTest('testSendmsgAncillaryGenerator'))
        suite.addTest(test.test_socket.SendmsgUDPTest('testSendmsgArray'))
        suite.addTest(test.test_socket.SendmsgUDPTest('testSendmsgBadArgs'))
        suite.addTest(test.test_socket.SendmsgUDPTest('testSendmsgBadCmsg'))
        suite.addTest(test.test_socket.SendmsgUDPTest('testSendmsgBadMultiCmsg'))
        suite.addTest(test.test_socket.SendmsgUDPTest('testSendmsgDataGenerator'))
        suite.addTest(test.test_socket.SendmsgUDPTest('testSendmsgExcessCmsgReject'))
        suite.addTest(test.test_socket.SendmsgUDPTest('testSendmsgGather'))
        suite.addTest(test.test_socket.SendmsgUDPTest('testSendmsgNoDestAddr'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsg'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsgAfterClose'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsgAncillaryGenerator'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsgArray'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsgBadArgs'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsgBadCmsg'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsgBadMultiCmsg'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsgDataGenerator'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsgDontWait'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsgExcessCmsgReject'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsgExplicitNoneAddr'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsgGather'))
        suite.addTest(test.test_socket.SendmsgUnixStreamTest('testSendmsgTimeout'))
        suite.addTest(test.test_socket.SmallBufferedFileObjectClassTestCase('testAttributes'))
        suite.addTest(test.test_socket.SmallBufferedFileObjectClassTestCase('testCloseAfterMakefile'))
        suite.addTest(test.test_socket.SmallBufferedFileObjectClassTestCase('testClosedAttr'))
        suite.addTest(test.test_socket.SmallBufferedFileObjectClassTestCase('testFullRead'))
        suite.addTest(test.test_socket.SmallBufferedFileObjectClassTestCase('testMakefileAfterMakefileClose'))
        suite.addTest(test.test_socket.SmallBufferedFileObjectClassTestCase('testReadAfterTimeout'))
        suite.addTest(test.test_socket.SmallBufferedFileObjectClassTestCase('testReadline'))
        suite.addTest(test.test_socket.SmallBufferedFileObjectClassTestCase('testRealClose'))
        suite.addTest(test.test_socket.SmallBufferedFileObjectClassTestCase('testSmallRead'))
        suite.addTest(test.test_socket.SmallBufferedFileObjectClassTestCase('testUnbufferedRead'))
        suite.addTest(test.test_socket.TCPCloserTest('testClose'))
        suite.addTest(test.test_socket.TCPTimeoutTest('testInterruptedTimeout'))
        suite.addTest(test.test_socket.TCPTimeoutTest('testTCPTimeout'))
        suite.addTest(test.test_socket.TCPTimeoutTest('testTimeoutZero'))
        suite.addTest(test.test_socket.TIPCTest('testRDM'))
        suite.addTest(test.test_socket.TIPCThreadableTest('testStream'))
        suite.addTest(test.test_socket.TestExceptions('testExceptionTree'))
        suite.addTest(test.test_socket.TestLinuxAbstractNamespace('testLinuxAbstractNamespace'))
        suite.addTest(test.test_socket.TestLinuxAbstractNamespace('testMaxName'))
        suite.addTest(test.test_socket.TestLinuxAbstractNamespace('testNameOverflow'))
        suite.addTest(test.test_socket.TestLinuxAbstractNamespace('testStrName'))
        suite.addTest(unittest.expectedFailure(test.test_socket.TestSocketSharing('testShare'))) # https://github.com/IronLanguages/ironpython3/issues/1226
        suite.addTest(unittest.expectedFailure(test.test_socket.TestSocketSharing('testShareLength'))) # https://github.com/IronLanguages/ironpython3/issues/1226
        suite.addTest(unittest.expectedFailure(test.test_socket.TestSocketSharing('testShareLocal'))) # https://github.com/IronLanguages/ironpython3/issues/1226
        suite.addTest(unittest.expectedFailure(test.test_socket.TestSocketSharing('testTypes'))) # https://github.com/IronLanguages/ironpython3/issues/1226
        suite.addTest(test.test_socket.TestUnixDomain('testBytesAddr'))
        suite.addTest(test.test_socket.TestUnixDomain('testStrAddr'))
        suite.addTest(test.test_socket.TestUnixDomain('testSurrogateescapeBind'))
        suite.addTest(test.test_socket.TestUnixDomain('testUnencodableAddr'))
        suite.addTest(test.test_socket.UDPTimeoutTest('testTimeoutZero'))
        suite.addTest(test.test_socket.UDPTimeoutTest('testUDPTimeout'))
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testAttributes'))
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testCloseAfterMakefile'))
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testClosedAttr'))
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testFullRead'))
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testMakefileAfterMakefileClose'))
        suite.addTest(unittest.expectedFailure(test.test_socket.UnbufferedFileObjectClassTestCase('testMakefileClose'))) # SystemError: Cannot access a disposed object.
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testMakefileCloseSocketDestroy'))
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testReadAfterTimeout'))
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testReadline'))
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testRealClose'))
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testSmallRead'))
        suite.addTest(unittest.expectedFailure(test.test_socket.UnbufferedFileObjectClassTestCase('testSmallReadNonBlocking'))) # TODO: figure out
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testUnbufferedRead'))
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testUnbufferedReadline'))
        suite.addTest(test.test_socket.UnbufferedFileObjectClassTestCase('testWriteNonBlocking'))
        suite.addTest(test.test_socket.UnicodeReadFileObjectClassTestCase('testAttributes'))
        suite.addTest(test.test_socket.UnicodeReadFileObjectClassTestCase('testCloseAfterMakefile'))
        suite.addTest(test.test_socket.UnicodeReadFileObjectClassTestCase('testClosedAttr'))
        suite.addTest(test.test_socket.UnicodeReadFileObjectClassTestCase('testFullRead'))
        suite.addTest(test.test_socket.UnicodeReadFileObjectClassTestCase('testMakefileAfterMakefileClose'))
        suite.addTest(test.test_socket.UnicodeReadFileObjectClassTestCase('testReadAfterTimeout'))
        suite.addTest(test.test_socket.UnicodeReadFileObjectClassTestCase('testReadline'))
        suite.addTest(test.test_socket.UnicodeReadFileObjectClassTestCase('testRealClose'))
        suite.addTest(test.test_socket.UnicodeReadFileObjectClassTestCase('testSmallRead'))
        suite.addTest(test.test_socket.UnicodeReadFileObjectClassTestCase('testUnbufferedRead'))
        suite.addTest(test.test_socket.UnicodeReadWriteFileObjectClassTestCase('testAttributes'))
        suite.addTest(test.test_socket.UnicodeReadWriteFileObjectClassTestCase('testCloseAfterMakefile'))
        suite.addTest(test.test_socket.UnicodeReadWriteFileObjectClassTestCase('testClosedAttr'))
        suite.addTest(test.test_socket.UnicodeReadWriteFileObjectClassTestCase('testFullRead'))
        suite.addTest(test.test_socket.UnicodeReadWriteFileObjectClassTestCase('testMakefileAfterMakefileClose'))
        suite.addTest(test.test_socket.UnicodeReadWriteFileObjectClassTestCase('testReadAfterTimeout'))
        suite.addTest(test.test_socket.UnicodeReadWriteFileObjectClassTestCase('testReadline'))
        suite.addTest(test.test_socket.UnicodeReadWriteFileObjectClassTestCase('testRealClose'))
        suite.addTest(test.test_socket.UnicodeReadWriteFileObjectClassTestCase('testSmallRead'))
        suite.addTest(test.test_socket.UnicodeReadWriteFileObjectClassTestCase('testUnbufferedRead'))
        suite.addTest(test.test_socket.UnicodeWriteFileObjectClassTestCase('testAttributes'))
        suite.addTest(test.test_socket.UnicodeWriteFileObjectClassTestCase('testCloseAfterMakefile'))
        suite.addTest(test.test_socket.UnicodeWriteFileObjectClassTestCase('testClosedAttr'))
        suite.addTest(test.test_socket.UnicodeWriteFileObjectClassTestCase('testFullRead'))
        suite.addTest(test.test_socket.UnicodeWriteFileObjectClassTestCase('testMakefileAfterMakefileClose'))
        suite.addTest(test.test_socket.UnicodeWriteFileObjectClassTestCase('testReadAfterTimeout'))
        suite.addTest(test.test_socket.UnicodeWriteFileObjectClassTestCase('testReadline'))
        suite.addTest(test.test_socket.UnicodeWriteFileObjectClassTestCase('testRealClose'))
        suite.addTest(test.test_socket.UnicodeWriteFileObjectClassTestCase('testSmallRead'))
        suite.addTest(test.test_socket.UnicodeWriteFileObjectClassTestCase('testUnbufferedRead'))
        return suite

    else:
        return loader.loadTestsFromModule(test.test_socket, pattern)

run_test(__name__)
